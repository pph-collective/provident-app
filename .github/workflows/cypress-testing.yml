name: Cypress Tests

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        
      - name: Setup Node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 14
        
      - name: Cache NPM Dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
            
      - name: Install Dependencies
        env:
          CYPRESS_INSTALL_BINARY: 0 # Skip installing of cypress
        run: yarn install --frozen-lockfile
      
      - name: Cypress install
        uses: cypress-io/github-action@v2
        with:
          # Disable running of tests within install job
          runTests: false
          build: yarn build
          
      - name: Save build folder
        uses: actions/upload-artifact@v2
        with:
          name: dist
          if-no-files-found: error
          path: dist
      
  cypress-run:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Setup Node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 14
      
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Download the build folders
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
          
      - name: Cache Firebase Emulator Binaries
        uses: actions/cache@v2.1.5
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-${{ steps.cache-settings.outputs.firebase-tools }}

#      - name: Set Test Environment Settings
#        run: echo "CYPRESS_BASE_URL=$(cat cypress.json | jq .baseUrl)" >> $GITHUB_ENV

      - name: E2E on Chrome
        uses: cypress-io/github-action@v2
        with:
          browser: chrome
          start:|
             yarn firebase:dev
             yarn serve:dist
           wait-on: "http://localhost:8080/"
           wait-on-timeout: 120
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          # Service Account (used for creating custom auth tokens)
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
