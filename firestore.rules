rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function interventionUser() {
      let org = get(/databases/$(database)/documents/users/$(request.auth.token.email)).data.organization;
      return get(/databases/$(database)/documents/organizations/$(org)).data.intervention_arm || false;
    }

    function userInOrg(organization) {
      return get(/databases/$(database)/documents/users/$(request.auth.token.email)).data.organization == organization;
    }

    function userHasRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.token.email)).data.role == role;
    }

    match /users/{user} {
      allow update, delete: if request.auth != null && request.auth.token.admin == true;
      allow read: if request.auth != null && (request.auth.token.email == resource.data.email || request.auth.token.admin == true);
      allow create: if request.auth != null && request.auth.token.email == request.resource.data.email;

      match /form_responses/{form} {
        allow create: if request.auth != null && request.auth.token.email == user;
        allow update: if request.auth != null && request.auth.token.email == user && resource.data.status != 'Submitted';
        allow read: if request.auth != null && request.auth.token.email == user;
      }
    }

    match /activity_log/{document=**} {
      allow read, update, delete: if request.auth != null && request.auth.token.admin == true;
      allow create: if true;
    }

    match /organizations/{organization} {
      allow read: if true;

      match /form_responses/{form} {
        allow create: if request.auth != null && userInOrg(organization) && userHasRole('champion');
        allow update: if request.auth != null && resource.data.status != 'Submitted' && userInOrg(organization) && userHasRole('champion');
        allow read: if request.auth != null && userInOrg(organization);
      }
    }

    match /forms/{document=**} {
      allow read: if request.auth != null;
    }

    // TODO: delete this rule once transitioned to model data and predictions
    match /results/{document=**} {
      allow read: if request.auth != null;
    }

    match /model_data/{document=**} {
      allow read: if request.auth != null;
    }

    match /model_predictions/{document=**} {
      allow read: if request.auth != null && interventionUser();
    }
  }
}
